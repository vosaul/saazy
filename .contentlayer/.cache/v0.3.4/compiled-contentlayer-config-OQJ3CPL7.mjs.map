{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../src/lib/getToc.ts", "../../../src/lib/remark/remarkTocHeadings.ts", "../../../src/lib/mdxOptions.mjs", "../../../src/lib/rehype/rehypePrettyCode.mjs", "../../../src/lib/remark/remarkAdmonitions.mjs", "../../../src/lib/remark/remarkImgToJsx.mjs"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\nimport { getToc } from \"./src/lib/getToc\";\nimport mdxOptions from \"./src/lib/mdxOptions.mjs\";\n\nexport const Blog = defineDocumentType(() => ({\n  name: \"Blog\",\n  filePathPattern: `blog/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n    },\n    date: {\n      type: \"date\",\n      required: true,\n    },\n    tags: {\n      type: \"list\",\n      of: {\n        type: \"string\",\n      },\n    },\n    thumbImg: {\n      type: \"string\",\n    },\n    thumbAlt: {\n      type: \"string\",\n    },\n    author: {\n      type: \"string\",\n    },\n  },\n  computedFields: {\n    slug: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.flattenedPath.replace(\"blog/\", \"\"),\n    },\n    toc: {\n      type: \"list\",\n      resolve: (doc) => getToc(doc.body.raw),\n    },\n  },\n}));\n\nexport const Docs = defineDocumentType(() => ({\n  name: \"Docs\",\n  filePathPattern: `docs/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    id: {\n      type: \"string\",\n    },\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n    },\n  },\n  computedFields: {\n    id: {\n      type: \"string\",\n      resolve: (doc) => doc.id || doc._raw.flattenedPath.replace(\"docs/\", \"\"),\n    },\n    slug: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.flattenedPath.replace(\"docs/\", \"\"),\n    },\n    toc: {\n      type: \"list\",\n      resolve: (doc) => getToc(doc.body.raw),\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"content\",\n  contentDirExclude: [\"docs/_sidebar.js\"],\n  documentTypes: [Blog, Docs],\n  mdx: mdxOptions,\n});\n", "import { remark } from \"remark\";\nimport remarkMdx from \"remark-mdx\";\n\nimport { Toc } from \"../types\";\n\nimport remarkTocHeadings from \"./remark/remarkTocHeadings\";\n\nexport async function getToc(markdown: string) {\n  const toc: Toc = [];\n  remark()\n    .use(remarkMdx)\n    .use(remarkTocHeadings, { exportRef: toc })\n    .processSync(markdown);\n  return toc;\n}\n", "// https://github.com/timlrx/tailwind-nextjs-starter-blog/blob/00059a8e7fa5fe400cda3e502201ce65bfe47d7a/lib/remark-toc-headings.js\n\nimport { slug } from \"github-slugger\";\nimport { toString } from \"mdast-util-to-string\";\nimport { visit } from \"unist-util-visit\";\n\nimport { Toc } from \"@/types\";\n\n// https://github.com/timlrx/tailwind-nextjs-starter-blog/blob/4d6114f8f858cea78574a87a113ddb6a89f8ddce/lib/remark-toc-headings.js\nexport default function remarkTocHeadings(options: { exportRef: Toc }) {\n  return (tree: any) =>\n    visit(tree, \"heading\", (node) => {\n      const textContent = toString(node);\n      options.exportRef.push({\n        value: textContent,\n        url: \"#\" + slug(textContent),\n        depth: node.depth,\n      });\n    });\n}\n", "import rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeExternalLinks from \"rehype-external-links\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkDirective from \"remark-directive\";\nimport remarkGfm from \"remark-gfm\";\n\nimport { options as rehypePrettyCodeOptions } from \"./rehype/rehypePrettyCode.mjs\";\nimport remarkAdmonitions from \"./remark/remarkAdmonitions.mjs\";\nimport remarkImgToJsx from \"./remark/remarkImgToJsx.mjs\";\n\n/** @type {import('mdx-bundler/dist/types').BundleMDXOptions} */\nconst mdxOptions = {\n  remarkPlugins: [\n    remarkGfm,\n    remarkDirective,\n    remarkAdmonitions,\n    remarkImgToJsx,\n  ],\n  rehypePlugins: [\n    rehypeExternalLinks,\n    rehypeSlug,\n    [\n      rehypeAutolinkHeadings,\n      {\n        behavior: \"append\",\n        properties: {\n          [\"aria-hidden\"]: false,\n          [\"tab-index\"]: false,\n          [\"class\"]: \"hash-link\",\n        },\n      },\n    ],\n    [rehypePrettyCode, rehypePrettyCodeOptions],\n  ],\n};\n\nexport default mdxOptions;\n", "export const options = {\n  theme: \"github-dark\",\n  keepBackground: false,\n  onVisitLine(node) {\n    // https://rehype-pretty-code.netlify.app/#:~:text=//%20Prevent%20lines%20from,be%20copy/pasted\n    if (node.children.length === 0) {\n      node.children = [{ type: \"text\", value: \" \" }];\n    }\n  },\n  onVisitHighlightedLine(node) {\n    node.properties.className.push(\"highlighted\");\n  },\n  onVisitHighlightedWord(node) {\n    node.properties.className = [\"word\"];\n  },\n};\n", "import { visit } from \"unist-util-visit\";\n\nexport default function remarkAdmonitions() {\n  return (tree) => {\n    visit(tree, (node) => {\n      if (\n        node.type === \"textDirective\" ||\n        node.type === \"leafDirective\" ||\n        node.type === \"containerDirective\"\n      ) {\n        if (![\"info\", \"success\", \"warn\", \"danger\"].includes(node.name)) return;\n        // Store node.name before overwrite with \"Alert\".\n        const status = node.name;\n\n        node.type = \"mdxJsxFlowElement\";\n        node.name = \"Message\";\n        node.attributes = [\n          { type: \"mdxJsxAttribute\", name: \"status\", value: status },\n        ];\n      }\n    });\n  };\n}\n", "import fs from \"fs\";\n\nimport sizeOf from \"image-size\";\nimport { visit } from \"unist-util-visit\";\n\n// https://github.com/timlrx/tailwind-nextjs-starter-blog/blob/4d6114f8f858cea78574a87a113ddb6a89f8ddce/lib/remark-img-to-jsx.js\nexport default function remarkImgToJsx() {\n  return (tree) => {\n    visit(\n      tree,\n      // only visit p tags that contain an img element\n      (node) =>\n        node.type === \"paragraph\" &&\n        node.children.some((n) => n.type === \"image\"),\n      (node) => {\n        const imageNode = node.children.find((n) => n.type === \"image\");\n\n        // only local files\n        if (fs.existsSync(`${process.cwd()}/public${imageNode.url}`)) {\n          const dimensions = sizeOf(`${process.cwd()}/public${imageNode.url}`);\n\n          // Convert original node to next/image\n          (imageNode.type = \"mdxJsxFlowElement\"),\n            (imageNode.name = \"Image\"),\n            (imageNode.attributes = [\n              { type: \"mdxJsxAttribute\", name: \"alt\", value: imageNode.alt },\n              { type: \"mdxJsxAttribute\", name: \"src\", value: imageNode.url },\n              {\n                type: \"mdxJsxAttribute\",\n                name: \"width\",\n                value: dimensions.width,\n              },\n              {\n                type: \"mdxJsxAttribute\",\n                name: \"height\",\n                value: dimensions.height,\n              },\n            ]);\n\n          // Change node type from p to div to avoid nesting error\n          node.type = \"div\";\n          node.children = [imageNode];\n        }\n      }\n    );\n  };\n}\n"],
  "mappings": "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",
  "names": ["options", "visit", "visit"]
}
